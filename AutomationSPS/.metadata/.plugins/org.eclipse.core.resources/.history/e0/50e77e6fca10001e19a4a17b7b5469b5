package UserManagement;

import java.io.IOException;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import LoginPage.LoginPage;
import Pages.UserProfilePage;
import UserManagementFun.UserManagementFun;
import Utils.TestUtils;
import Utils.Utilities;

public class UserManagement extends UserManagementFun
 {
  public UserManagement() throws IOException
   {
    super();
	PageFactory.initElements(driver,this);
   }
  LoginPage loginPage;
  UserProfilePage userpropage;
  TestUtils utils;
  Utilities utilize;
  public int DataSet = -1;
  @BeforeMethod
	 public void setUp() throws IOException, InterruptedException 
	  {
	   openBrowser();
	   loginPage = new LoginPage();
	   utils = new TestUtils();
	   utilize = new Utilities();
	  }
  @Test(priority=2)
   public void EditUser() throws InterruptedException, IOException
    {
     loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
     Thread.sleep(3000);
     UserManagementFun um= new UserManagementFun();
     um.Extendbutton();
     Thread.sleep(2000);
     um.UserManagementButton();
     Thread.sleep(2000);
     //Edit User
     um.EditButton();
     Thread.sleep(2000);
     um.NameEE();
     um.NameEA();
     Thread.sleep(2000);
     um.CountryCodeE();
     um.MobileE();
     Thread.sleep(2000);
     um.RoleE();
     um.Submit();
     Thread.sleep(2000);
     um.MessageEdit();
    }
  @Test(priority=3)
    public void ResetPasswordUser() throws InterruptedException, IOException
     {
      loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
      Thread.sleep(3000);
      UserManagementFun um= new UserManagementFun();
      um.Extendbutton();
      Thread.sleep(2000);
      um.UserManagementButton();
      Thread.sleep(2000);
      um.ResetPasswordButton();
      um.Password();
      Thread.sleep(4000);
      um.MessageEdit();
     }
  @Test(priority=4)
  public void ActivateAndDeactivateUser() throws InterruptedException, IOException
   {
    loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
    Thread.sleep(3000);
    UserManagementFun um= new UserManagementFun();
    um.Extendbutton();
    Thread.sleep(2000);
    um.UserManagementButton();
    Thread.sleep(2000);
    um.ActivateAndDeactivate();
    Thread.sleep(2000);
    um.Message();
    um.ActivateAndDeactivate();
    Thread.sleep(2000);
    um.Message();
   }

 }
